name: Container Image

on:
  workflow_call:
    secrets:
      GH_PA_TOKEN:
        required: true
        description: 'GitHub token'
  workflow_dispatch:

env:
  MAKE_STOP_ON_ERRORS: true
  MAKE_DEBUG: true

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Update apt-get
        run: |
          sudo apt-get update

      - name: Install Podman
        run: |
          echo "Installing Podman"
          sudo apt install -y qemu-utils qemu-system-x86 qemu-kvm qemu-system bridge-utils libvirt-daemon-system libvirt-daemon
          sugo apt install -y libguestfs-tools bridge-utils libosinfo-bin qemu-system tuned
          sudo adduser `id -un` libvirt
          sudo adduser `id -un` kvm
          sudo chown `id -un`:kvm -R /dev/kvm
          sudo systemctl enable --now libvirtd
          sudo systemctl restart libvirtd


          # gvproxy
          echo "Installing gvproxy"
          GVPROXY_VERSION="v0.7.5"
          GVPROXY_URL="https://github.com/containers/gvisor-tap-vsock/releases/download/${GVPROXY_VERSION}/gvproxy-linux-amd64"
          curl -SL -o /tmp/gvproxy-linux-amd64 $GVPROXY_URL
          sudo mkdir -p /usr/local/lib/podman
          sudo install -m 0755 /tmp/gvproxy-linux-amd64 /usr/local/lib/podman/gvproxy

          # virtiofsd
          echo "Installing virtiofsd"
          sudo apt install -y libcap-ng-dev libseccomp-dev
          cd /tmp
          git clone https://gitlab.com/virtio-fs/virtiofsd.git
          cd virtiofsd/
          cargo build --release
          sudo install -m 0755 target/release/virtiofsd /usr/local/bin/virtiofsd

          # podman
          echo "Installing Podman"
          PODMAN_VERSION="v5.2.2"
          PODMAN_URL=" https://github.com/containers/podman/releases/download/${PODMAN_VERSION}/podman-remote-static-linux_amd64.tar.gz"

          echo "Downloading Podman from $PODMAN_URL"
          curl -SL -o /tmp/podman.tar.gz $PODMAN_URL
          tar -xvf /tmp/podman.tar.gz -C /tmp/
          sudo install -m 0755 /tmp/bin/podman-remote-static-linux_amd64 /usr/local/bin/podman
          podman --version

          # init podman machine
          echo "Initializing Podman machine"
          podman machine init
          podman machine start

      - name: Summary Information
        run: |
          echo "# Container Image Summary" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Tools and versions
        run: |
          echo "## Tools and versions" >> $GITHUB_STEP_SUMMARY

          ubuntu_version=$(cat /etc/os-release | grep "VERSION=" | awk -F= '{print $2}' | sed 's/"//g')
          echo "Ubuntu version: $ubuntu_version"
          echo "**Ubuntu Version:** $ubuntu_version" >> $GITHUB_STEP_SUMMARY

          bash_version=$(bash --version | head -n 1 | awk '{print $4}')
          echo "Bash version: $bash_version"
          echo "**Bash Version:** $bash_version" >> $GITHUB_STEP_SUMMARY

          git_version=$(git --version | awk '{print $3}')
          echo "Git version: $git_version"
          echo "**Git Version:** $git_version" >> $GITHUB_STEP_SUMMARY

          make_version=$(make --version | head -n 1)
          echo "Make version: $make_version"
          echo "**Make Version:** $make_version" >> $GITHUB_STEP_SUMMARY

          podman_version=$(podman --version | awk '{print $3}')
          echo "Podman version: $podman_version"
          echo "**Podman Version:** $podman_version" >> $GITHUB_STEP_SUMMARY

      - name: Download Distribution files
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist/

      - name: Make container-build
        run: |
          echo "## Make container-build" >> $GITHUB_STEP_SUMMARY
          GIT_VERSION=${{ github.ref_name }} make container-build | tee -a $GITHUB_STEP_SUMMARY

      - name: Show container images
        run: |
          echo "## Show container images" >> $GITHUB_STEP_SUMMARY
          podman images | tee -a $GITHUB_STEP_SUMMARY

      - name: Make container-login
        run: |
          echo "## Make container-login" >> $GITHUB_STEP_SUMMARY
          GIT_VERSION=${{ github.ref_name }} REPOSITORY_REGISTRY_TOKEN=${{ secrets.GH_PA_TOKEN }} make container-login | tee -a $GITHUB_STEP_SUMMARY

      - name: Make container-publish
        run: |
          echo "## Make container-publish" >> $GITHUB_STEP_SUMMARY
          GIT_VERSION=${{ github.ref_name }} make container-publish | tee -a $GITHUB_STEP_SUMMARY